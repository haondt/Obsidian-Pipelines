variables:
  TASK:
    value: "docker_image_update"
    options:
      - "docker_image_update"
      - "apt_upgrade"
      - "create_docker_lxc"
      - "plex_update"
    description: "Task to run"
  CONTAINER_SUFFIX:
    value: ""
  CONTAINER_GID:
    description: "Group id for new docker lxc"

workflow:
  name: $TASK
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"
      when: always

stages:
  - bootstrap

get-ansible-scripts:
  stage: bootstrap
  script:
    - git clone https://github.com/haondt/Obsidian.git
    - mv Obsidian/docker-automation/gitlab_runner/ansible .
  artifacts:
    name: ansible-scripts
    paths:
      - ansible/
    expire_in: 1 day
  rules:
    - if: $CI_PIPELINE_SOURCE == "web"

docker-image-update:
  stage: bootstrap
  rules:
    - if: $TASK == "docker_image_update"
  trigger:
    include:
      - local: 'docker-image-update.yml'
  variables:
    PARENT_PIPELINE_ID: $CI_PIPELINE_ID

plex-update:
  stage: bootstrap
  rules:
    - if: $TASK == "plex_update"
  trigger:
    include:
      - local: 'plex-update.yml'
  variables:
    PARENT_PIPELINE_ID: $CI_PIPELINE_ID

apt-upgrade:
  stage: bootstrap
  rules:
    - if: $TASK == "apt_upgrade"
  trigger:
    include:
      - local: 'apt-upgrade.yml'
  variables:
    PARENT_PIPELINE_ID: $CI_PIPELINE_ID

create-docker-lxc:
  stage: bootstrap
  rules:
    - if: $TASK == "create_docker_lxc"
  trigger:
    include:
      - local: 'create-docker-lxc.yml'
  variables:
    PARENT_PIPELINE_ID: $CI_PIPELINE_ID
    CONTAINER_SUFFIX: $CONTAINER_SUFFIX